name: Scheduled

on:
  workflow_dispatch:
  pull_request:
    branches:
      - main

  # runs every day at 09:00 UTC
  schedule:
    - cron: '0 9 * * *'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ["3.8", "3.9", "3.10", "3.11"]

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip nox
      - name: Unit tests with nox
        run: |
          python -m nox -s unit
          python -m nox -s notebooks

  #M-series Mac Mini
  build-apple-mseries:
    runs-on: [self-hosted, macOS, ARM64]
    env:
      GITHUB_PATH: ${PYENV_ROOT/bin:$PATH}
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10"]

    steps:
      - uses: actions/checkout@v4
      - name: Install python & create virtualenv
        shell: bash
        run: |
          eval "$(pyenv init -)"
          pyenv install ${{ matrix.python-version }} -s
          pyenv virtualenv ${{ matrix.python-version }} pybop-${{ matrix.python-version }}

      - name: Install dependencies & run unit tests
        shell: bash
        run: |
          eval "$(pyenv init -)"
          pyenv activate pybop-${{ matrix.python-version }}
          python -m pip install --upgrade pip wheel setuptools nox
          python -m nox -s unit
          python -m nox -s notebooks

      - name: Uninstall pyenv-virtualenv & python
        if: always()
        shell: bash
        run: |
          eval "$(pyenv init -)"
          pyenv activate pybop-${{ matrix.python-version }}
          pyenv uninstall -f $( python --version )
